"""init

Revision ID: 444f8356d5a4
Revises: 
Create Date: 2025-05-28 13:34:38.625490

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '444f8356d5a4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Benefits')
    op.drop_table('LoyaltyCardCategories')
    op.drop_table('Procedures')
    op.drop_table('HospitalServices')
    op.drop_table('ProceduresAnalysis')
    op.drop_table('Contraindications')
    op.drop_table('ProceduresSupplies')
    op.drop_table('BenefitedClients')
    op.drop_table('DoctorsSalary')
    op.drop_table('Payments')
    op.drop_table('Wards')
    op.drop_table('Supplies')
    op.drop_table('Hospital')
    op.drop_table('Staff')
    op.drop_table('ClientsContraindications')
    op.drop_table('Doctors')
    op.drop_table('Analysis')
    op.drop_table('PrescribedAnalysis')
    op.drop_table('Appointments')
    op.drop_table('Sponsors')
    op.drop_table('Clients')
    op.drop_table('VisitsHistory')
    op.drop_table('ProceduresContraindications')
    op.drop_table('Suppliers')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Suppliers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), nullable=True),
    sa.Column('type_of_supply', sa.VARCHAR(length=100), nullable=True),
    sa.Column('email', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ProceduresContraindications',
    sa.Column('procedure_id', sa.INTEGER(), nullable=False),
    sa.Column('contraindication_code', sa.VARCHAR(length=10), nullable=False),
    sa.ForeignKeyConstraint(['contraindication_code'], ['Contraindications.code'], ),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.PrimaryKeyConstraint('procedure_id', 'contraindication_code')
    )
    op.create_table('VisitsHistory',
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), nullable=False),
    sa.Column('procedure_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('time', sa.TIME(), nullable=False),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.Column('doctors_report', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.PrimaryKeyConstraint('client_id', 'doctor_id', 'procedure_id', 'date', 'time')
    )
    op.create_table('Clients',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=11), nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), nullable=True),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('loyalty_card_category', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['loyalty_card_category'], ['LoyaltyCardCategories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Sponsors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), nullable=False),
    sa.Column('products', sa.VARCHAR(length=100), nullable=True),
    sa.Column('sales_percentage', sa.INTEGER(), nullable=True),
    sa.Column('last_delivery_date', sa.DATE(), nullable=True),
    sa.Column('sold', sa.INTEGER(), nullable=True),
    sa.Column('email', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Appointments',
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('time', sa.TIME(), nullable=False),
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), nullable=False),
    sa.Column('procedure_id', sa.INTEGER(), nullable=False),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['Doctors.id'], ),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.PrimaryKeyConstraint('date', 'time', 'client_id', 'doctor_id', 'procedure_id')
    )
    op.create_table('PrescribedAnalysis',
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.Column('analysis_id', sa.INTEGER(), nullable=False),
    sa.Column('results', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['Analysis.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.PrimaryKeyConstraint('client_id', 'analysis_id')
    )
    op.create_table('Analysis',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.Column('price_rush', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Doctors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column(' experience', sa.INTEGER(), nullable=True),
    sa.Column('категория', sa.VARCHAR(length=50), nullable=True),
    sa.Column('специализация', sa.VARCHAR(length=100), nullable=True),
    sa.Column('ставка', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ClientsContraindications',
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.Column('contraindication_code', sa.VARCHAR(length=10), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.ForeignKeyConstraint(['contraindication_code'], ['Contraindications.code'], ),
    sa.PrimaryKeyConstraint('client_id', 'contraindication_code')
    )
    op.create_table('Staff',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('experience', sa.INTEGER(), nullable=True),
    sa.Column('post', sa.VARCHAR(length=100), nullable=True),
    sa.Column('bid', sa.INTEGER(), nullable=True),
    sa.Column('salary_per_hour', sa.INTEGER(), nullable=True),
    sa.Column('hours_worked', sa.INTEGER(), nullable=True),
    sa.Column('additional_payment', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Hospital',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('client_id', sa.INTEGER(), nullable=True),
    sa.Column('receipt_date', sa.DATE(), nullable=True),
    sa.Column('discharge_date', sa.DATE(), nullable=True),
    sa.Column('ward_id', sa.INTEGER(), nullable=True),
    sa.Column('service_id', sa.INTEGER(), nullable=True),
    sa.Column('payment_sum', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['HospitalServices.id'], ),
    sa.ForeignKeyConstraint(['ward_id'], ['Wards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Supplies',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('amount', sa.INTEGER(), nullable=True),
    sa.Column('last_delivery_date', sa.DATE(), nullable=True),
    sa.Column(' purchase_price', sa.INTEGER(), nullable=True),
    sa.Column('supplier_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['Suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Wards',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('price_per_day', sa.INTEGER(), nullable=True),
    sa.Column('occupancy', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('date_of_payment', sa.DATE(), nullable=True),
    sa.Column('client_id', sa.INTEGER(), nullable=True),
    sa.Column('procedure_id', sa.INTEGER(), nullable=True),
    sa.Column('sum', sa.INTEGER(), nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), nullable=True),
    sa.Column('status', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('DoctorsSalary',
    sa.Column('doctor_id', sa.INTEGER(), nullable=False),
    sa.Column('sponsored_merch_sold', sa.INTEGER(), nullable=True),
    sa.Column('hours_worked', sa.INTEGER(), nullable=True),
    sa.Column('category_allowance', sa.INTEGER(), nullable=True),
    sa.Column('bonus', sa.INTEGER(), nullable=True),
    sa.Column(' salary_per_hour', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['Doctors.id'], ),
    sa.PrimaryKeyConstraint('doctor_id')
    )
    op.create_table('BenefitedClients',
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.Column('benefit_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['benefit_id'], ['Benefits.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['Clients.id'], ),
    sa.PrimaryKeyConstraint('client_id', 'benefit_id')
    )
    op.create_table('ProceduresSupplies',
    sa.Column('procedure_id', sa.INTEGER(), nullable=False),
    sa.Column('supply_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.ForeignKeyConstraint(['supply_id'], ['Supplies.id'], ),
    sa.PrimaryKeyConstraint('procedure_id', 'supply_id')
    )
    op.create_table('Contraindications',
    sa.Column('code', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('ProceduresAnalysis',
    sa.Column('procedure_id', sa.INTEGER(), nullable=False),
    sa.Column('analysis_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['Analysis.id'], ),
    sa.ForeignKeyConstraint(['procedure_id'], ['Procedures.id'], ),
    sa.PrimaryKeyConstraint('procedure_id', 'analysis_id')
    )
    op.create_table('HospitalServices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Procedures',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('price', sa.INTEGER(), nullable=True),
    sa.Column(' duration', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LoyaltyCardCategories',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.INTEGER(), nullable=False),
    sa.Column('condition', sa.TEXT(), nullable=True),
    sa.Column('discount', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Benefits',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('condition', sa.TEXT(), nullable=True),
    sa.Column(' discount', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
